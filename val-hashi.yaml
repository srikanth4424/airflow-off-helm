# Airflow Base Settings
airflow:
  image:
    repository: apache/airflow  # Use the official Airflow image
    tag: 2.6.0  # Choose your preferred version of Airflow
    pullPolicy: IfNotPresent

  # Configuring Airflow to use CeleryExecutor
  config:
    AIRFLOW__CORE__EXECUTOR: "CeleryExecutor"
    AIRFLOW__CORE__LOAD_EXAMPLES: "False"
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: "postgresql+psycopg2://airflow:{{ .Env.DB_PASSWORD }}@pgbouncer-service:5432/airflow"
    AIRFLOW__OTEL__ENABLED: "True"
    AIRFLOW__OTEL__EXPORTER: "OTLP"
    AIRFLOW__OTEL__OTLP_ENDPOINT: "http://otel-collector:4317"
    AIRFLOW__OTEL__INSTRUMENTATION: "True"
    AIRFLOW__OTEL__TRACES_EXPORTER: "otlp"
    AIRFLOW__WEBSERVER__SECRET_KEY: "{{ .Env.WEBSERVER_KEY }}"  # Injected via Vault

  # Vault Annotations for injecting secrets securely
  web:
    annotations:
      vault.hashicorp.com/agent-inject: 'true'
      vault.hashicorp.com/role: 'airflow-role'
      vault.hashicorp.com/agent-inject-secret-db-password: 'secret/data/airflow-db-password'
      vault.hashicorp.com/agent-inject-secret-redis-password: 'secret/data/airflow-redis-password'
      vault.hashicorp.com/agent-inject-secret-webserver-key: 'secret/data/airflow-webserver-key'
      vault.hashicorp.com/agent-inject-template-db-password: |
        {{- with secret "secret/data/airflow-db-password" -}}
        export DB_PASSWORD={{ .Data.data.password }}
        {{- end }}
      vault.hashicorp.com/agent-inject-template-redis-password: |
        {{- with secret "secret/data/airflow-redis-password" -}}
        export REDIS_PASSWORD={{ .Data.data.password }}
        {{- end }}
      vault.hashicorp.com/agent-inject-template-webserver-key: |
        {{- with secret "secret/data/airflow-webserver-key" -}}
        export WEBSERVER_KEY={{ .Data.data.webserver_key }}
        {{- end }}

# CeleryExecutor Configurations
executor:
  celery:
    worker:
      replicas: 3
    brokerUrl: "redis://:{{ .Env.REDIS_PASSWORD }}@redis-service:6379/0"
    resultBackend: "db+postgresql://airflow:{{ .Env.DB_PASSWORD }}@pgbouncer-service:5432/airflow"

# OpenTelemetry Collector Configuration
otelCollector:
  enabled: true
  image:
    repository: otel/opentelemetry-collector
    tag: latest
  config:
    receivers:
      otlp:
        protocols:
          http:
          grpc:
    exporters:
      logging:
      otlp:
        endpoint: "otel-collector:4317"
    service:
      pipelines:
        traces:
          receivers: [otlp]
          exporters: [logging, otlp]

# PgBouncer Configuration
pgbouncer:
  enabled: true
  image:
    repository: edoburu/pgbouncer
    tag: latest
    pullPolicy: IfNotPresent
  configmap:
    pgbouncer.ini: |
      [databases]
      airflow = host=postgresql port=5432 dbname=airflow user=airflow password=$DB_PASSWORD
      [pgbouncer]
      listen_port = 5432
      max_client_conn = 100
      default_pool_size = 20
      min_pool_size = 10
      reserve_pool_size = 5
      reserve_pool_timeout = 5
      auth_type = md5
      ignore_startup_parameters = extra_float_digits

  auth:
    enabled: true
    user: airflow
    password: $DB_PASSWORD  # PgBouncer user password injected by Vault

  service:
    type: ClusterIP
    port: 5432

# Redis Configurations (for Celery broker)
redis:
  enabled: true
  auth:
    enabled: true
    password: $REDIS_PASSWORD  # Redis password injected by Vault

# PostgreSQL Database (for Airflow metadata)
postgresql:
  enabled: true
  postgresqlUsername: airflow
  postgresqlPassword: $DB_PASSWORD  # Injected via Vault
  postgresqlDatabase: airflow
  persistence:
    enabled: true
    size: 8Gi

# Webserver Config
web:
  replicas: 1
  service:
    type: LoadBalancer

# Scheduler Config
scheduler:
  replicas: 1
  service:
    type: ClusterIP

# Ingress Settings (Optional)
ingress:
  enabled: true
  web:
    annotations:
      kubernetes.io/ingress.class: nginx
    hosts:
      - airflow.example.com
    paths: ["/"]
    tls:
      - secretName: airflow-tls-secret
        hosts:
          - airflow.example.com

# Persistence Configuration for DAGs (Optional)
dags:
  persistence:
    enabled: true
    size: 5Gi

# Airflow Logs (Optional)
logs:
  persistence:
    enabled: true
    size: 5Gi

# Airflow Workers (for CeleryExecutor)
workers:
  replicas: 3
