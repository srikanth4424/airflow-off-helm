# Airflow Base Settings
airflow:
  image:
    repository: apache/airflow  # Use the official Airflow image
    tag: 2.6.0  # Choose your preferred version of Airflow
    pullPolicy: IfNotPresent

  # Configuring Airflow to use CeleryExecutor
  config:
    AIRFLOW__CORE__EXECUTOR: "CeleryExecutor"  # Set the executor to CeleryExecutor
    AIRFLOW__CORE__LOAD_EXAMPLES: "False"  # Disable loading example DAGs
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: "postgresql+psycopg2://airflow:db-password@pgbouncer-service:5432/airflow"
    AIRFLOW__OTEL__ENABLED: "True"  # Enable OTEL in Airflow
    AIRFLOW__OTEL__EXPORTER: "OTLP"
    AIRFLOW__OTEL__OTLP_ENDPOINT: "http://otel-collector:4317"  # URL for OTEL collector
    AIRFLOW__OTEL__INSTRUMENTATION: "True"  # Enable instrumentation
    AIRFLOW__OTEL__TRACES_EXPORTER: "otlp"  # Define exporter type

  extraEnv:
    - name: AIRFLOW__DATABASE__PASSWORD
      valueFrom:
        secretKeyRef:
          name: airflow-db-password  # Secret for database password
          key: password

# CeleryExecutor Configurations
executor:
  celery:
    worker:
      replicas: 3  # Number of Celery workers
    brokerUrl: "redis://:redis-password@redis-service:6379/0"  # Redis connection string for broker
    resultBackend: "db+postgresql://airflow:db-password@pgbouncer-service:5432/airflow"

# OpenTelemetry Collector Configuration (Optional)
otelCollector:
  enabled: true
  image:
    repository: otel/opentelemetry-collector
    tag: latest
  config:
    receivers:
      otlp:
        protocols:
          http:
          grpc:
    exporters:
      logging:
      otlp:
        endpoint: "otel-collector:4317"
    service:
      pipelines:
        traces:
          receivers: [otlp]
          exporters: [logging, otlp]

# PgBouncer Configuration (Connection Pooler for PostgreSQL)
pgbouncer:
  enabled: true
  image:
    repository: edoburu/pgbouncer
    tag: latest
    pullPolicy: IfNotPresent
  configmap:
    pgbouncer.ini: |
      [databases]
      airflow = host=postgresql port=5432 dbname=airflow user=airflow password=db-password
      [pgbouncer]
      listen_port = 5432
      max_client_conn = 100
      default_pool_size = 20
      min_pool_size = 10
      reserve_pool_size = 5
      reserve_pool_timeout = 5
      auth_type = md5
      ignore_startup_parameters = extra_float_digits

  auth:
    enabled: true
    user: airflow
    password: db-password  # PgBouncer user password

  service:
    type: ClusterIP
    port: 5432  # PgBouncer service port

# Redis Configurations (for Celery broker)
redis:
  enabled: true
  auth:
    enabled: true
    password: redis-password

# PostgreSQL Database (for Airflow metadata)
postgresql:
  enabled: true
  postgresqlUsername: airflow
  postgresqlPassword: db-password  # Database password
  postgresqlDatabase: airflow
  persistence:
    enabled: true
    size: 8Gi

# Webserver Config
web:
  replicas: 1
  service:
    type: LoadBalancer

# Scheduler Config
scheduler:
  replicas: 1
  service:
    type: ClusterIP

# Ingress Settings (Optional)
ingress:
  enabled: true
  web:
    annotations:
      kubernetes.io/ingress.class: nginx
    hosts:
      - airflow.example.com
    paths: ["/"]
    tls:
      - secretName: airflow-tls-secret
        hosts:
          - airflow.example.com

# Persistence Configuration for DAGs (Optional)
dags:
  persistence:
    enabled: true
    size: 5Gi

# Airflow Logs (Optional)
logs:
  persistence:
    enabled: true
    size: 5Gi

# Airflow Workers (for CeleryExecutor)
workers:
  replicas: 3
